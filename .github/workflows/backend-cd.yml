name: Deploy Spring Boot to EC2

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up JDK for Spring Boot
      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'temurin'

      # Build the Spring Boot application
      - name: Build with Maven
        run: mvn clean package -DskipTests

      # Log in to DockerHub
      - name: Log in to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Build and push Docker image
      - name: Build and push Docker image
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/my-springboot-app:${{ github.sha }} .
          docker tag ${{ secrets.DOCKERHUB_USERNAME }}/my-springboot-app:${{ github.sha }} ${{ secrets.DOCKERHUB_USERNAME }}/my-springboot-app:latest
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-springboot-app:${{ github.sha }}
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/my-springboot-app:latest

      # Deploy to EC2
      - name: Deploy to EC2
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            # Log in to DockerHub
            sudo docker login -u ${{ secrets.DOCKERHUB_USERNAME }} -p ${{ secrets.DOCKERHUB_TOKEN }}
            
            # Stop and remove existing container if it exists
            sudo docker stop my-springboot-container || true
            sudo docker rm my-springboot-container || true
            
            # Pull the latest image
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/my-springboot-app:latest
            
            # Run the new container
            sudo docker run --network app-network -d --name my-springboot-container -p 8080:8080 ${{ secrets.DOCKERHUB_USERNAME }}/my-springboot-app:latest
            
            # Clean up unused images
            sudo docker image prune -f